<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.architecture.admin.models.daosub.push.ContentsPushDaoSub">
    <!-- ==============================================================
        SETTING
    =============================================================== -->
    <!-- database name -->
    <sql id="databaseSns">${databaseRefIdSns}</sql>
    <sql id="databaseMember">${databaseRefIdMember}</sql>
    <sql id="databasePush">${databaseRefIdPush}</sql>
    <sql id="databaseCommon">${databaseRefIdCommon}</sql>

    <!-- ==============================================================
          SELECET
      =============================================================== -->
    <!--  이미지 태그 된 회원 uuid  -->
    <select id="getImgTagMember" parameterType="ContentsPushDto" resultType="String">
        SELECT
            `snimmetama`.`member_uuid`
        FROM
            <include refid="databaseSns"/>`sns_img_member_tag_mapping` as `snimmetama`
        WHERE
            `snimmetama`.`contents_idx` = #{idx}
        AND `snimmetama`.`state` = 1
    </select>

    <!--  이미지 태그 된 회원 IDX  -->
    <select id="getPrevImgTagMember" parameterType="ContentsPushDto" resultType="String">
        SELECT
            DISTINCT `snimmetama`.`member_uuid`
        FROM
            <include refid="databaseSns"/>`sns_img_member_tag_mapping` as `snimmetama`
        WHERE
                `snimmetama`.`contents_idx` = #{idx}
            AND `snimmetama`.`reg_date` <![CDATA[ < ]]> #{modiDate}
    </select>

    <!--  멘션 된 회원 uuid  -->
    <select id="getMentionMember" parameterType="ContentsPushDto" resultType="String">
        SELECT
            `snmeme`.`member_uuid`
        FROM
            <include refid="databaseSns"/>`sns_contents_mention_mapping` as `sncomema`
        INNER JOIN  <include refid="databaseSns"/>`sns_member_mention` AS `snmeme`
            ON `sncomema`.`mention_idx` = `snmeme`.`idx`
        WHERE
                `sncomema`.`contents_idx` = #{idx}
            <if test="modiDate != null and modiDate != ''">
                AND `sncomema`.`reg_date` <![CDATA[ >= ]]> #{modiDate}
            </if>
            AND `sncomema`.`state` = 1
    </select>

    <!--  컨텐츠 작성자 정보  -->
    <select id="getContentsWriterInfo" parameterType="long" resultType="ContentsPushDto">
        SELECT
            `snco`.`idx`
            ,`snco`.`modi_date`
            ,`snco`.`member_uuid`
            ,`pume`.`nick`
            ,`snco`.`reg_date`
        FROM
            <include refid="databaseSns"/>`sns_contents` AS `snco`
        INNER JOIN  <include refid="databaseMember"/>`puppycat_member` AS `pume`
            ON `snco`.`member_uuid` = `pume`.`uuid`
        WHERE
            `snco`.`idx` = #{contentsIdx}
    </select>

    <!--  컨텐츠 첫번째 이미지  -->
    <select id="getContentsImg" parameterType="long" resultType="string">
        SELECT
            `sncoim`.`url`
        FROM
            <include refid="databaseSns"/>`sns_contents_img` AS `sncoim`
        WHERE
                `sncoim`.`contents_idx` = #{contentsIdx}
            AND  `sncoim`.`sort` = 1
            AND  `sncoim`.`state` = 1
    </select>


    <!--  팔로워 리스트 가져오기  -->
    <select id="getFollowerMember" parameterType="ContentsPushDto" resultType="String">
        SELECT
            `snmefo`.`member_uuid`
        FROM
            <include refid="databaseSns"/>`sns_member_follow` AS `snmefo`
        WHERE
                `snmefo`.`follow_uuid` = #{memberUuid}
            AND  `snmefo`.`reg_date` <![CDATA[ <= ]]> #{regDate}
            AND  `snmefo`.`state` = 1
    </select>

    <!-- ==============================================================
        UPDATE
    =============================================================== -->
    <!-- ==============================================================
        DELETE
    =============================================================== -->
</mapper>